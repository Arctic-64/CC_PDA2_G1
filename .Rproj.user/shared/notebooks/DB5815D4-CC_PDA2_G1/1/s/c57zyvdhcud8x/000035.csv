"0","ui <- fluidPage("
"0",""
"0","    # Application title"
"0","    titlePanel(""jacks experiment""),"
"0",""
"0","        #output print"
"0","    verticalLayout("
"0","        wellPanel(textOutput(""region_selected"")),"
"0",""
"0","        # the map"
"0","        mainPanel("
"0","           leafletOutput(""scotlandHM""),"
"0","           plotOutput(""plotteddata"")"
"0","        )"
"0","    )"
"0",")"
"0",""
"0",""
"0",""
"0","# Define server logic "
"0","server <- function(input, output) {"
"0","  ##map bullshit"
"0","  output$scotlandHM <- renderLeaflet({"
"0","    leaflet() %>%"
"0","addTiles() %>%"
"0","addResetMapButton()%>%"
"0","  addPolygons(data = scotlandpoly, popup = ~HBName, group = ""HB_regions"", layerId = ~HBName) %>%"
"0","  addCircles(data = hospitals, lng = ~X, lat = ~Y, label = ~LocationName, group = ""hospital_locations"", color = ""red"")"
"0","    })"
"0","    ## trigger map bullshit"
"0","observeEvent(input$scotlandHM_shape_click, { "
"0","    region_selected <- reactive(input$scotlandHM_shape_click)"
"0","    p <- reactive(region_selected()$id)"
"0","    output$region_selected <- renderText(p())"
"0",""
"0"," ##map data bullshit"
"0"," filtered_df <- reactive({"
"0","    HB_data %>%"
"0","      filter(HBName == p())"
"0","  })"
"0","  ##plotting bullshit"
"0","  output$plotteddata <- renderPlot({"
"0","        ggplot(filtered_df()) +"
"0","        aes(x = Quarter, y = PercentageOccupancy) +"
"0","        geom_line() +"
"0","        geom_point()"
"0","    "
"0","  })"
"0","    "
"0","  })}"
"0",""
"0",""
"0",""
"0","# Run the application "
"0","shinyApp(ui = ui, server = server)"
"2","
Listening on http://127.0.0.1:6450
"
